import React, { useState } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';
import BookingConfirmation from './BookingConfirmation';

const EventDetail = ({ events, user }) => {
  const { id } = useParams();
  const event = events.find(event => event._id === id);
  const [tickets, setTickets] = useState(1);
  const [showModal, setShowModal] = useState(false);
  const [occupiedSeats, setOccupiedSeats] = useState({});

  const handleBook = () => {
    const payload = {
      eventId: event._id,
      userId: user._id, // Replace with actual user ID
      seats: [],
    };

    axios.post('http://localhost:8000/reserve', payload)
      .then(response => {
        alert(response.data.message);

        // Update occupied seats after reservation
        const updatedSeats = response.data.seats;
        const newOccupiedSeats = { ...occupiedSeats };
        updatedSeats.forEach(seat => {
          if (!newOccupiedSeats[seat.row]) newOccupiedSeats[seat.row] = [];
          newOccupiedSeats[seat.row].push(seat.number);
        });

        setOccupiedSeats(newOccupiedSeats);
        setShowModal(false);
      })
      .catch(error => {
        console.error('Error making reservation:', error);
        alert('Failed to reserve seats. Please try again.');
      });
  };

  if (!event) return <div>Event not found</div>;

  const showtime = event.showtimes[0].showtimeDate;
  const formattedShowtime = new Date(showtime).toLocaleString();

  return (
    <section className="min-h-screen py-8 bg-gray-900 md:py-16 dark:bg-gray-900 antialiased flex items-center">
      <div className="max-w-screen-xl px-4 mx-auto 2xl:px-0">
        <div className="lg:grid lg:grid-cols-2 lg:gap-8 xl:gap-16">
          <div className="shrink-0 max-w-md lg:max-w-lg mx-auto">
            <img className="w-full rounded-lg" src={event.eventImgUrl} alt={event.eventName} />
          </div>

          <div className="mt-6 sm:mt-8 lg:mt-0 lg:max-w-lg">
            <h1 className="text-3xl font-bold text-white sm:text-4xl">{event.eventName}</h1>
            <p className="mt-4 text-gray-300">{event.eventDetails}</p>
            
            <div className="mt-4 text-gray-400">
              <strong className="text-white">Showtime:</strong> {formattedShowtime}
            </div>

            <div className="mt-6 flex items-center gap-4">
              <div className="flex items-center">
                <button
                  onClick={() => setTickets(tickets > 1 ? tickets - 1 : 1)}
                  className="text-indigo-500 inline-flex items-center bg-gray-800 rounded-full h-10 w-10 justify-center focus:outline-none hover:bg-gray-700"
                >
                  -
                </button>
                <span className="text-lg text-white font-bold mx-4">{tickets} {tickets === 1 ? "Seat" : "Seats"}</span>
                <button
                  onClick={() => setTickets(tickets + 1)}
                  className="text-indigo-500 inline-flex items-center bg-gray-800 rounded-full h-10 w-10 justify-center focus:outline-none hover:bg-gray-700"
                >
                  +
                </button>
              </div>
            </div>

            <div className="mt-6">
              <button 
                onClick={() => setShowModal(true)} 
                className="bg-indigo-500 text-white py-3 px-6 rounded-lg hover:bg-indigo-600 transition duration-200 focus:outline-none"
              >
                Book Now
              </button>
            </div>

            <hr className="my-6 border-gray-700" />
          </div>
        </div>
      </div>

      {showModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full">
            <BookingConfirmation 
              event={event} 
              tickets={tickets} 
              closeModal={() => setShowModal(false)} 
              handleBook={handleBook} 
            />
          </div>
        </div>
      )}
    </section>
  );
};

export default EventDetail;
